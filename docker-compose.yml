version: "3"

services:
  webserver:
    image: nginx:stable-alpine
    restart: unless-stopped
    ports:
      - 88:80
    volumes:
      - ./:/var/www/html
      - ./docker/nginx.default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network
    depends_on:
      - app

  app:
    build:
      context: .
      dockerfile: php.dockerfile
    volumes:
      - ./:/var/www/html
    networks:
      - app-network
      - queue-network
      - db-network
    depends_on:
      - db
      - laravel_echo_server
      - redis

  db:
    image: mysql:5.7
    restart: unless-stopped
    ports:
      - 3308:3306
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./db_mysql:/var/lib/mysql/
    networks:
      - db-network

  laravel_echo_server:
    build:
      context: docker/laravel-echo
      dockerfile: Dockerfile
    volumes:
      - '.env:/app/.env'
    restart: unless-stopped
    networks:
      - queue-network # laravel echo needs to access to redis to take message and broadcast
      - app-network # laravel echo needs to access app network to authenticate through webserver

  redis:
    image: redis:5-alpine
    command: redis-server
    volumes:
      - './docker/data/redis:/data'
    restart: unless-stopped
    networks:
      - queue-network

#Docker Networks
networks:
  app-network:
    driver: bridge
  queue-network:
    driver: bridge
  db-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
